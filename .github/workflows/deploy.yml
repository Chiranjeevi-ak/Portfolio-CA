name: Deploy to GitHub Pages
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # üîé Find the folder that has BOTH package.json and index.html (Vite project root)
      - name: Detect Vite project directory
        id: detect
        run: |
          set -e
          # search max 3 levels deep; adjust if needed
          DIR=$(find . -maxdepth 3 -type f -name index.html -printf '%h\n' | while read d; do
            if [ -f "$d/package.json" ]; then echo "$d"; fi
          done | head -n1)
          if [ -z "$DIR" ]; then
            echo "‚ùå Could not find a directory that contains both index.html and package.json"
            echo "Repository tree:"; ls -la; exit 1
          fi
          echo "Found Vite project at: $DIR"
          echo "dir=$DIR" >> "$GITHUB_OUTPUT"

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: ${{ steps.detect.outputs.dir }}
        run: npm ci || npm i

      - name: Build
        working-directory: ${{ steps.detect.outputs.dir }}
        run: npm run build

      - name: Verify dist exists (fail early if missing)
        working-directory: ${{ steps.detect.outputs.dir }}
        run: |
          if [ ! -f dist/index.html ]; then
            echo "‚ùå Build did not produce dist/index.html ‚Äî check Vite errors & vite.config.*"
            echo "Listing:"; ls -la; echo "Dist listing:"; ls -la dist || true
            exit 1
          fi

      - name: SPA 404 (optional)
        working-directory: ${{ steps.detect.outputs.dir }}
        run: cp dist/index.html dist/404.html

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          # path is from repo root
          path: ${{ steps.detect.outputs.dir }}/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
